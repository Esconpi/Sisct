@model IEnumerable<Escon.SisctNET.Model.ProductNote>

@if (ViewBag.TypeTaxation == "ST" || ViewBag.TypeTaxation == "STMVA" || ViewBag.TypeTaxation == "STMPAUTA" ||
    ViewBag.TypeTaxation == "AT")
{
    <thead style="font-size:8px;">
        <tr>
            <th></th>
            <th>Nota</th>
            <th>Dia/Mês</th>
            @if (ViewBag.Type != "RegimeBA" && ViewBag.Type != "RegimeBA2")
            {
                <th>V. <br /> Nota</th>
            }
            @if (ViewBag.TypeTaxation == "STMPAUTA")
            {
                <th>Cod. Produto Pauta</th>
            }
            <th>Produto</th>
            @if (ViewBag.Type == "RegimeBA2")
            {
                <th>Unidade</th>
                <th>Quantidade</th>
                <th>Preço</th>
                <th>Valor</th>
                <th>Aliq Int(%)</th>
                <th>Total <br /> ICMS</th>
                <th>Total <br /> Fecop</th>
            }
            @if (ViewBag.Type != "RegimeBA2")
            {
                <th>V. <br /> Produto</th>
                <th>Frete Nº</th>
                <th>V. <br /> Frete</th>
            }
            <th>B. <br /> Cálculo</th>
            @if (ViewBag.TypeTaxation == "ST" || ViewBag.TypeTaxation == "STMVA")
            {
                <th>MVA(%)</th>
                <th>BC. <br /> ICMS</th>
                <th>BCR(%)</th>
                <th>BCR</th>
            }
            <th>Aliq Int(%)</th>
            <th>V. <br /> Imp. AC</th>
            <th>ICMS</th>
            <th>ICMS  <br />ST NFe</th>
            <th>Fecop  <br />ST NFe</th>
            <th>Total <br /> ICMS</th>
            <th>Total <br /> Fecop</th>
            <th></th>
        </tr>
    </thead>
    <tbody style="font-size:8px;">
        @foreach (var item in Model)
        {
            <tr>
                @if (item.Note.Iest == "")
                {
                    <td style="font-size:10px"><strong>S</strong></td>
                }
                else
                {
                    <td style="font-size:10px"><strong>I</strong></td>
                }

                <td style="font-size:7px;">@Html.DisplayFor(modelItem => item.Note.Nnf)</td>
                <td>@Convert.ToDateTime(item.Note.Dhemi).ToString("dd/MM")</td>

                @if (ViewBag.Type != "RegimeBA" && ViewBag.Type != "RegimeBA2")
                {
                    <td>@string.Format("{0:N}", Convert.ToDecimal(item.Note.Vnf))</td>
                }

                @if (ViewBag.TypeTaxation == "STMPAUTA")
                {
                    <td>@Html.DisplayFor(modelItem => item.Product.Code)</td>
                }

                <td>
                    @if (item.Xprod.Length <= 30)
                    {
                        @Html.DisplayFor(modelItem => item.Xprod)
                    }
                    else
                    {
                        @item.Xprod.Substring(0, 30)
                    }
                </td>
               
                @if (ViewBag.Type == "RegimeBA2")
                {
                    <td>@item.Ucom</td>
                    <td>
                        @if(item.Qpauta != null)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.Qpauta))
                        }
                        else
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.Qcom))
                        }
                    </td>
                    <td>
                        @if (item.Pautado)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.Product.Price))
                        }
                    </td>
                    <td>
                        @if (item.Qpauta != null)
                        {
                            @if (item.Pautado)
                            {
                                @string.Format("{0:N}", Convert.ToDecimal(item.Qpauta) * Convert.ToDecimal(item.Product.Price))
                            }
                        }
                        else
                        {
                            @if (item.Pautado)
                            {
                                @string.Format("{0:N}", Convert.ToDecimal(item.Qcom) * Convert.ToDecimal(item.Product.Price))
                            }
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.AliqInterna)</td>
                    <td>
                        @if (item.Qpauta != null)
                        {
                            @if (item.Pautado)
                            {
                                @string.Format("{0:N}", (Convert.ToDecimal(item.Qpauta) * Convert.ToDecimal(item.Product.Price)) * ((Convert.ToDecimal(item.AliqInterna) - Convert.ToDecimal(item.Fecop)) / 100))
                            }
                        }
                        else
                        {
                            @if (item.Pautado)
                            {
                                @string.Format("{0:N}", (Convert.ToDecimal(item.Qcom) * Convert.ToDecimal(item.Product.Price)) * ((Convert.ToDecimal(item.AliqInterna) - Convert.ToDecimal(item.Fecop)) / 100))
                            }
                        }
                    </td>
                    <td>
                        @if (item.Qpauta != null)
                        {
                            @if (item.Pautado)
                            {
                                @string.Format("{0:N}", (Convert.ToDecimal(item.Qpauta) * Convert.ToDecimal(item.Product.Price)) * (Convert.ToDecimal(item.Fecop) / 100))
                            }
                        }
                        else
                        {
                            @if (item.Pautado)
                            {
                                @string.Format("{0:N}", (Convert.ToDecimal(item.Qcom) * Convert.ToDecimal(item.Product.Price)) * (Convert.ToDecimal(item.Fecop) / 100))
                            }
                        }
                    </td>
                }
               
                @if (ViewBag.Type != "RegimeBA2")
                {
                    <td>
                        @if (item.Pautado == true)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.Vprod))
                        }
                        else
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.Vprod) + Convert.ToDecimal(item.Vseg) + Convert.ToDecimal(item.Voutro) +
                                     Convert.ToDecimal(item.Vfrete) - Convert.ToDecimal(item.Vdesc) + Convert.ToDecimal(item.Vipi))
                        }

                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Note.Nct)</td>
                    <td>
                        @if (Convert.ToDecimal(item.Freterateado) > 0)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.Freterateado))
                        }
                    </td>
                }
               
                <td>
                    @string.Format("{0:N}", Convert.ToDecimal(item.Vbasecalc))
                </td>
               
                @if (ViewBag.TypeTaxation == "ST" || ViewBag.TypeTaxation == "STMVA")
                {
                    <td>@Html.DisplayFor(modelItem => item.Mva)</td>
                    <td>@string.Format("{0:N}", Convert.ToDecimal(item.Valoragregado))</td>
                    <td>@Html.DisplayFor(modelItem => item.BCR)</td>
                    <td>
                        @if (Convert.ToDecimal(item.BCR) > 0)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.ValorBCR))
                        }
                    </td>
                }
               
                <td>@Html.DisplayFor(modelItem => item.AliqInterna)</td>
                <td>@string.Format("{0:N}", Convert.ToDecimal(item.ValorAC))</td>
                <td>
                    @if (item.EBcr)
                    {
                        @if (item.Picms.Equals(12))
                        {
                            @string.Format("{0:N}", ((Convert.ToDecimal(item.Vprod) + Convert.ToDecimal(item.Vseg) + Convert.ToDecimal(item.Voutro) +
                                                    Convert.ToDecimal(item.Vfrete) + Convert.ToDecimal(item.Vipi) + Convert.ToDecimal(item.Freterateado) -
                                                    Convert.ToDecimal(item.Vdesc)) * 7 / 100) + Convert.ToDecimal(item.IcmsCTe))
                        }
                        else
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.IcmsCTe) + Convert.ToDecimal(item.Vicms))
                        }
                    }
                    else
                    {
                        @string.Format("{0:N}", Convert.ToDecimal(item.IcmsCTe) + Convert.ToDecimal(item.Vicms))
                    }
                </td>                
                <td>@string.Format("{0:N}", Convert.ToDecimal(item.IcmsST))</td>
                <td>@string.Format("{0:N}", Convert.ToDecimal(item.VfcpST) + Convert.ToDecimal(item.VfcpSTRet))</td>
                <td>@string.Format("{0:N}", Convert.ToDecimal(item.TotalICMS))</td>
                <td>@string.Format("{0:N}", Convert.ToDecimal(item.TotalFecop))</td>
                <td>
                    @if (item.Pautado == true)
                    {
                        <span>P</span>
                    }
                </td>
            </tr>
        }
    </tbody>
}
else if (ViewBag.TypeTaxation == "AP" || ViewBag.TypeTaxation == "CO" ||
         ViewBag.TypeTaxation == "COR" || ViewBag.TypeTaxation == "IM")
{
    <thead>
        @if (ViewBag.IsCTe == true)
        {
            <tr style="font-size:9px;">
                <th rowspan="2"></th>
                <th rowspan="2">Nota</th>
                <th rowspan="2">UF</th>
                <th rowspan="2">Dia/Mês</th>
                <th rowspan="2">V. Nota</th>
                <th rowspan="2">Produto</th>
                <th style="text-align: center;" colspan="5">NFe</th>
                <th style="text-align: center;" colspan="6">CTe</th>
                <th rowspan="2">ICMS ST <br /> NFe</th>
                <th rowspan="2">ICMS Apurado</th>
            </tr>
            <tr style="font-size:9px;">
                <th>V. Produto</th>
                <th>Aliq Inter(%)</th>
                <th>Aliq Intra <br /> NFe(%)</th>
                <th>Dif</th>
                <th>ICMS Produto</th>
                <th>Nº Frete</th>
                <th>V. Frete</th>
                <th>Aliq Inter(%)</th>
                <th>Aliq Intra <br /> UF(%)</th>
                <th>Dif</th>
                <th>ICMS CTe</th>
            </tr>
        }
        else
        {
            <tr style="font-size:9px;">
                <th></th>
                <th>Nota</th>
                <th>UF</th>
                <th>Dia/Mês</th>
                <th>V. Nota</th>
                <th>Produto</th>
                <th>V. Produto</th>
                <th>Nº Frete</th>
                <th>V. Frete</th>
                <th>BC. ICMS</th>
                <th>Aliq Inter(%)</th>
                <th>Aliq Intra <br /> NFe(%)</th>
                <th>Dif</th>
                <th>ICMS ST <br /> NFe</th>
                <th>ICMS Apurado</th>
            </tr>
        }

    </thead>
    <tbody style="font-size:9px;">
        @foreach (var item in Model)
        {
            @if (ViewBag.IsCTe == true)
            {
                <tr>
                    @if (item.Note.Iest == "")
                    {
                        <td><strong>S</strong></td>
                    }
                    else
                    {
                        <td><strong>I</strong></td>
                    }
                    <td>@Html.DisplayFor(modelItem => item.Note.Nnf)</td>
                    <td>@Html.DisplayFor(modelItem => item.Note.Uf)</td>
                    <td>@Convert.ToDateTime(item.Note.Dhemi).ToString("dd/MM")</td>
                    <td>@string.Format("{0:N}", Convert.ToDecimal(item.Note.Vnf))</td>
                    <td>
                        @if (item.Xprod.Length <= 30)
                        {
                            @Html.DisplayFor(modelItem => item.Xprod)
                        }
                        else
                        {
                            @item.Xprod.Substring(0, 30)
                        }
                    </td>
                    <td>
                        @string.Format("{0:N}", Convert.ToDecimal(item.Vprod) + Convert.ToDecimal(item.Vseg) + Convert.ToDecimal(item.Voutro) +
                                                Convert.ToDecimal(item.Vfrete) - Convert.ToDecimal(item.Vdesc) + Convert.ToDecimal(item.Vipi))
                    </td>
                    <td>
                        @if (item.EBcr == true && item.AliqInternaBCR != null)
                        {
                            @item.AliqInternaBCR
                        }
                        else
                        {
                            @item.AliqInterna
                        }
                    </td>
                    <td>
                        @if (item.EBcr == true && item.PicmsBCR != null)
                        {
                            @if (item.Orig == 1 || item.Orig == 2 || item.Orig == 3 || item.Orig == 8)
                            {
                                @item.Picms
                            }
                            else
                            {
                                @item.PicmsBCR
                            }
                        }
                        else
                        {
                            @item.Picms
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Diferencial)</td>
                    <td>
                        @if (item.PicmsOrig > 0)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.IcmsApurado))
                        }
                        else
                        {
                            @if (ViewBag.DataTemp < ViewBag.DataRef)
                            {
                                @string.Format("{0:N}", (Convert.ToDecimal(item.Vprod) + Convert.ToDecimal(item.Vseg) + Convert.ToDecimal(item.Voutro) +
                                                        Convert.ToDecimal(item.Vfrete) - Convert.ToDecimal(item.Vdesc) + Convert.ToDecimal(item.Vipi)) * 
                                                        (Convert.ToDecimal(item.Diferencial) / 100))

                            }
                            else
                            {
                                @string.Format("{0:N}", Convert.ToDecimal(item.IcmsApurado))
                            }
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Note.Nct)</td>
                    <td>
                        @if (Convert.ToDecimal(item.Freterateado) > 0)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.Freterateado))
                        }
                    </td>
                    <td>
                        @item.AliqInterna
                    </td>
                    <td>
                        @if (item.PicmsOrig > 0 && !item.TaxationType.Description.Equals("1  AP - Antecipação parcial"))
                        {
                            @Html.DisplayFor(modelItem => item.PicmsOrig)
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.Picms)
                        }
                    </td>
                    <td>
                        @if (item.DiferencialCTe > 0)
                        {
                            @Html.DisplayFor(modelItem => item.DiferencialCTe)
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.Diferencial)
                        }
                    </td>
                    <td>
                        @string.Format("{0:N}", Convert.ToDecimal(item.IcmsApuradoCTe))
                    </td>
                    <td>@string.Format("{0:N}", Convert.ToDecimal(item.IcmsST) + Convert.ToDecimal(item.VfcpST) + Convert.ToDecimal(item.VfcpSTRet))</td>
                    <td>
                        @if (item.IcmsApuradoCTe > 0)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.IcmsApurado) + Convert.ToDecimal(item.IcmsApuradoCTe))
                        }
                        else
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.IcmsApurado))
                        }
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    @if (item.Note.Iest == "")
                    {
                        <td><strong>S</strong></td>
                    }
                    else
                    {
                        <td><strong>I</strong></td>
                    }
                    <td>@Html.DisplayFor(modelItem => item.Note.Nnf)</td>
                    <td>@Html.DisplayFor(modelItem => item.Note.Uf)</td>
                    <td>@Convert.ToDateTime(item.Note.Dhemi).ToString("dd/MM")</td>
                    <td>@string.Format("{0:N}", Convert.ToDecimal(item.Note.Vnf))</td>
                    <td>
                        @if (item.Xprod.Length <= 30)
                        {
                            @Html.DisplayFor(modelItem => item.Xprod)
                        }
                        else
                        {
                            @item.Xprod.Substring(0, 30)
                        }
                    </td>
                    <td>
                        @string.Format("{0:N}", Convert.ToDecimal(item.Vprod) + Convert.ToDecimal(item.Vseg) + Convert.ToDecimal(item.Voutro) +
                                                Convert.ToDecimal(item.Vfrete) - Convert.ToDecimal(item.Vdesc) + Convert.ToDecimal(item.Vipi))
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Note.Nct)</td>
                    <td>
                        @if (Convert.ToDecimal(item.Freterateado) > 0)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.Freterateado))
                        }
                    </td>
                    <td>
                        @string.Format("{0:N}", Convert.ToDecimal(item.Vprod) + Convert.ToDecimal(item.Vseg) + Convert.ToDecimal(item.Voutro) +
                            Convert.ToDecimal(item.Vfrete) - Convert.ToDecimal(item.Vdesc) + Convert.ToDecimal(item.Vipi))
                    </td>
                    <td>
                        @if (item.EBcr == true && item.AliqInternaBCR != null)
                        {
                            @item.AliqInternaBCR
                        }
                        else
                        {
                            @item.AliqInterna
                        }
                    </td>
                    <td>
                        @if (item.EBcr == true && item.PicmsBCR != null)
                        {
                            @if (item.Orig == 1 || item.Orig == 2 || item.Orig == 3 || item.Orig == 8)
                            {
                                @item.Picms
                            }
                            else
                            {
                                @item.PicmsBCR
                            }
                        }
                        else
                        {
                            @item.Picms
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Diferencial)</td>
                    <td>@string.Format("{0:N}", Convert.ToDecimal(item.IcmsST) + Convert.ToDecimal(item.VfcpST) + Convert.ToDecimal(item.VfcpSTRet))</td>
                    <td>
                        @if (item.IcmsApuradoCTe > 0)
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.IcmsApurado) + Convert.ToDecimal(item.IcmsApuradoCTe))
                        }
                        else
                        {
                            @string.Format("{0:N}", Convert.ToDecimal(item.IcmsApurado))
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
}
else if (ViewBag.TypeTaxation == "Isento" || ViewBag.TypeTaxation == "NT")
{
    <thead style="font-size:12px;">
        <tr>
            <th style="text-align:center;">Nota</th>
            <th style="text-align:center;">Produto</th>
            <th style="text-align:center;">NCM</th>
            <th style="text-align:center;">Valor Produto</th>
        </tr>
    </thead>
    <tbody style="font-size:12px;">
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Note.Nnf)</td>
                <td>@Html.DisplayFor(modelItem => item.Xprod)</td>
                <td style="text-align:center;">@Html.DisplayFor(modelItem => item.Ncm)</td>
                <td style="text-align:right;">@string.Format("{0:N}", Convert.ToDecimal(item.Vprod) + Convert.ToDecimal(item.Vseg) + Convert.ToDecimal(item.Voutro) + Convert.ToDecimal(item.Vfrete) - Convert.ToDecimal(item.Vdesc))</td>
            </tr>
        }

    </tbody>
}
