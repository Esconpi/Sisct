@model IEnumerable<Escon.SisctNET.Model.AccountPlan>

    @{
        ViewData["Title"] = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";

    }
    <div class="box box-primary">
        <div class="box-header">
            <a href="/Company/Index" size="large" class="glyphicon glyphicon-circle-arrow-left pull-left"></a>
            <h3 class="box-title">Plano de Contas: @ViewBag.CompanyName - @ViewBag.Document</h3>
            <div class="btn-group pull-right">
                <a href="/AccountPlan/Sincronize?companyId=@ViewBag.CompanyId" class="btn btn-primary">
                    <i class="fa fa-refresh"></i>
                    Sincronizar com FORTES
                </a>
            </div>
        </div>
        <div class="box-body">
            <div style="width:100%; overflow:hidden; overflow-x:scroll; padding:20px;">

                <table class="table table-striped table-bordered" id="tblAccountPlan" style="width:100%; font-size:12px;">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Code)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Reduced)
                            </th>
                            <th>
                                A.
                            </th>
                            <th>
                                P.
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Active)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.AccountPlanTypeId)
                            </th>
                            <th></th>
                        </tr>

                    </thead>

                    <tfoot>

                    </tfoot>
                </table>
            </div>
        </div>
        <div class="box-footer"></div>
    </div>
    <script type="text/javascript">

    var updateingAccount = 1;
    $(document).ready(function () {

        function ShowNotify(msg, ttl, typemsg) {

        if (typemsg === "alert") {

            $.notify({
                title: ttl,
                message: msg
            }, {
                    type: 'pastel-warning',
                    delay: 5000,
                    template: '<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">' +
                        '<span data-notify="title">{1}</span>' +
                        '<span data-notify="message">{2}</span>' +
                        '</div>',
                    showProgressbar: true
                });

        } else if (typemsg === "danger") {

            $.notify({
                title: ttl,
                message: msg
            }, {
                    type: 'pastel-danger',
                    delay: 5000,
                    template: '<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">' +
                        '<span data-notify="title">{1}</span>' +
                        '<span data-notify="message">{2}</span>' +
                        '</div>',
                    showProgressbar: true
                });

        } else {

            $.notify({
                title: ttl,
                message: msg
            }, {
                    type: 'pastel-success',
                    delay: 5000,
                    template: '<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">' +
                        '<span data-notify="title">{1}</span>' +
                        '<span data-notify="message">{2}</span>' +
                        '</div>',
                    showProgressbar: true
                });

        }

        }

        function FormatResult(item) {
            var markup = "";
            if (item.name !== undefined) {
                markup += "<option value='" + item.id + "'>" + item.name + "</option>";
            }
            return markup;
        }

        function FormatSelection(item) {
            return item.name;
        }

        var tableAccounts = $('#tblAccountPlan').DataTable({
            searchDelay: 300,
            "ordering": false,
            "processing": true,
            "serverSide": true,
            "oLanguage": {
                "sProcessing": "Aguarde enquanto os dados são carregados ...",
                "sLengthMenu": "Mostrar _MENU_ registros por pagina",
                "sZeroRecords": "Nenhum registro disponível",
                "sInfoEmpty": "Exibindo 0 a 0 de 0 registros",
                "sInfo": "Exibindo de _START_ a _END_ de _TOTAL_ registros",
                "sInfoFiltered": "",
                "sSearch": "Buscar",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "Anterior",
                    "sNext": "Próximo",
                    "sLast": "Último"
                }
            },
            "fnDrawCallback": function (oSettings) {
                $("#tblAccountPlan tbody").off("change", ".chkStatus");

                $("#tblAccountPlan tbody").off("change", ".selectoptiontype");

                $("input[type='checkbox']").bootstrapToggle();

                $('.selectoptionAll').select2({
                    placeholder: 'Selecione um tipo de conta',
                    allowClear: true
                });

                $(".selectoption").select2({

                        placeholder: 'Selecione um tipo de conta',
                        allowClear: true,
                        ajax: {
                            delay: 500,
                            quietMillis: 10,
                            cache: false,
                            dataType: 'json',
                            type: 'GET',
                            async: true,
                            url: '/AccountPlanType/GetAll',
                            data: function (registration, page) {
                                return {
                                    page: page,
                                    pageSize: 100,
                                    registration: registration,
                                    otherValue: $("#OtherValue").val()
                                };
                            },
                            results: function (data, page) {
                                var more = (page * pageSize) < data.total;
                                return { results: data.dataItems, more: more };
                            }
                        },
                        formatResult: FormatResult,
                        formatSelection: FormatSelection,
                        escapeMarkup: function (m) { return m; }
                });

                $("#tblAccountPlan tbody").on("change", ".chkStatus", function () {

                    if (updateingAccount == $(this).prop('id')) {

                        return;
                    }

                    var rnd_class = 'rnd_' + Math.floor((Math.random() * 100) + 1);
                    $(this).addClass(rnd_class);
                    $(this).attr('disabled', 'disabled');

                    setTimeout(function () { $('.' + rnd_class).removeAttr('disabled'); updateingAccount = 0;}, 5000);
                    updateingAccount = $(this).prop('id');

                    if ($(this).attr('id') == 'chkAll') {
                        return;
                    }

                    var idLoader = $(this).attr('id');
                    $('#loader_' + idLoader).css('display', 'block');

                    try {
                        var accountName = $(this).attr('data-value');
                        var status = $(this).prop('checked') ? "ATIVADA" : "DESATIVADA";
                         $.ajax({
                            url: '@(Url.Action("UpdateStatus", "AccountPlan"))',
                            dataType: 'json',
                             type: 'post',
                            async: true,
                            contentType: 'application/json',
                            data: JSON.stringify({ "Id": $(this).prop('id'), "Active": $(this).prop('checked') }),
                            processData: false,
                            success: function (data) {
                                $('#loader_' + idLoader).css('display', 'none');
                                if (data.requestcode === 200) {
                                    ShowNotify(`Conta '${accountName}' ${status} com sucesso`, "Ativar", "success");
                                } else {
                                    ShowNotify(data.message, "Ativar", "danger");
                                }

                            },
                             error: function (jqXhr, textStatus, errorThrown) {
                                $('#loader_' + idLoader).css('display', 'none');
                                console.log(errorThrown);
                            }
                         });

                    } catch (e) {
                        console.log(e);
                    }
                });

                $("#tblAccountPlan tbody").on("change", ".selectoptiontype", function () {

                    var accountid = $(this).attr("AccountId");
                    var accountname = "";
                    accountname =  $(this).children("option:selected").text();
                    var accountypeid = $(this).val();


                    $('#loader_' + accountid).css('display', 'block');

                    $.ajax({
                        url: '@(Url.Action("UpdateAccountType", "AccountPlan"))',
                        dataType: 'json',
                        type: 'post',
                        contentType: 'application/json',
                        async: true,
                        data: JSON.stringify({ "AccountPlanId": accountid, "AccountTypeId": accountypeid }),
                        processData: false,
                        success: function (data, textStatus, jQxhr) {
                            $('#loader_' + accountid).css('display', 'none');
                            if (data.requestcode === 200) {

                                ShowNotify("O tipo de conta foi atualizado para " + accountname, "Tipo de Conta", "success");
                                $('#span_' + accountid).text(accountname);

                            }
                            else{
                                ShowNotify("Não foi possível atualizar o tipo da conta. " + data.message,"Tipo de Conta","danger");
                            }

                        },
                        error: function (jqXhr, textStatus, errorThrown) {
                             $('#loader_' + accountid).css('display', 'none');
                            console.log(errorThrown);
                        }
                    });

                });

            },
            "processing": true,
            "serverSide": true,
            "ajax": "/AccountPlan/GetAll",
            "columns": [
                { "data": "code" },
                { "data": "name" },
                { "data": "reduced" },
                {
                    "mData": "analytical",
                    "mRender": function (data, type, row) {
                        if (data) {
                            return "Sim";
                        } else {
                            return "Não";
                        }
                    }
                },
                {
                    "mData": "patrimonial",
                    "mRender": function (data, type, row) {
                        if (data) {
                            return "Sim";
                        } else {
                            return "Não";
                        }
                    }
                },
                {
                    "mData": "active",
                    "mRender": function (data, type, row) {

                        if (data) {
                            return "<input type='checkbox' data-value='" + row.name + "' class='chkStatus' data-off='Não' data-on='Sim' checked data-toggle='toggle' data-onstyle='primary' id='" + row.id + "' />";
                        } else {
                            return "<input type='checkbox' data-value='" + row.name + "' class='chkStatus' data-off='Não' data-on='Sim' data-toggle='toggle' data-onstyle='primary' id='" + row.id + "' />";
                        }

                    }
                },
                {
                    "mData": "accountPlanType.name",
                    "mRender": function (data, type, row) {
                        return "<select accountId='" + row.id + "' name='accountType' class='form-control selectoption selectoptiontype' style='width:100%;'></select><span id='span_" + row.id + "' style='font-size:10px;margin-top:-10px;'>" + row.accountPlanType.name + "</span>";
                    }
                },
                {
                    "mData": "id",
                    "mRender": function (data, type, row) {
                        return "<span class='loader' id='loader_" + data + "' style='display:none'></span><input type='hidden' value='" + data + "' />";
                    }
                }
            ]
        });

        $('#accountType').change(function () {

             var accountTypeId = $(this).children('option:selected').val();

             var dataSend = "{ AccountTypeId: " + accountTypeId + ", ";
             var accoutsIds = "["

            $("#tblAccountPlan tbody tr input[type='hidden']").each(function () {
                 accoutsIds += $(this).val() + ",";
             });

             accoutsIds = accoutsIds.substring(0, accoutsIds.lastIndexOf(','));
             accoutsIds += "]";
             dataSend += "AccountPlanId: " + accoutsIds + "}";

            $('#loaderAccountType').css('display', 'block');
            console.log('enviando para o servidor');

            $.ajax({

                url: '@(Url.Action("UpdateAll", "AccountPlan"))',
                dataType: 'json',
                type: 'post',
                contentType: 'application/json',
                async: true,
                data: dataSend,
                processData: false,
                success: function (data, textStatus, jQxhr) {

                    if (data.requestcode == 200) {
                       tableAccounts.ajax.reload( null, false );
                    }

                    $('#loaderAccountType').css('display', 'none');

                },
                error: function (jqXhr, textStatus, errorThrown) {
                    console.log(errorThrown);
                    $('#loaderAccountType').css('display', 'none');
                }
            });

        });

        $('#chkAll').change(function () {

            $("#tblAccountPlan tbody .chkStatus").each(function () {

                try {

                    var attr = $(this).attr('disabled');
                    if (typeof attr !== typeof undefined) {
                        return;
                    }

                    if ($('#chkAll').prop('checked')) {
                        $(this).prop('checked', true).change();
                    } else {
                         $(this).prop('checked', false).change();
                    }
                } catch (e) {
                    console.log(e);
                }

            });

        });

        $('#btnReload').click(function () {
            console.log('atualizando tabela');
            tableAccounts.ajax.reload(function (data) { console.log(data); }, false );
        });

    })
    </script>
